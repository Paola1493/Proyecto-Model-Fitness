#!/usr/bin/env python
# coding: utf-8

# # Proyecto 13

# Hola Paola!
# 
# Soy **Patricio Requena** üëã. Es un placer ser el revisor de tu proyecto el d√≠a de hoy!
# 
# Revisar√© tu proyecto detenidamente con el objetivo de ayudarte a mejorar y perfeccionar tus habilidades. Durante mi revisi√≥n, identificar√© √°reas donde puedas hacer mejoras en tu c√≥digo, se√±alando espec√≠ficamente qu√© y c√≥mo podr√≠as ajustar para optimizar el rendimiento y la claridad de tu proyecto. Adem√°s, es importante para m√≠ destacar los aspectos que has manejado excepcionalmente bien. Reconocer tus fortalezas te ayudar√° a entender qu√© t√©cnicas y m√©todos est√°n funcionando a tu favor y c√≥mo puedes aplicarlos en futuras tareas. 
# 
# _**Recuerda que al final de este notebook encontrar√°s un comentario general de mi parte**_, empecemos!
# 
# Encontrar√°s mis comentarios dentro de cajas verdes, amarillas o rojas, ‚ö†Ô∏è **por favor, no muevas, modifiques o borres mis comentarios** ‚ö†Ô∏è:
# 
# 
# <div class="alert alert-block alert-success">
# <b>Comentario del revisor</b> <a class=‚ÄútocSkip‚Äù></a>
# Si todo est√° perfecto.
# </div>
# 
# <div class="alert alert-block alert-warning">
# <b>Comentario del revisor</b> <a class=‚ÄútocSkip‚Äù></a>
# Si tu c√≥digo est√° bien pero se puede mejorar o hay alg√∫n detalle que le hace falta.
# </div>
# 
# <div class="alert alert-block alert-danger">
# <b>Comentario del revisor</b> <a class=‚ÄútocSkip‚Äù></a>
# Si de pronto hace falta algo o existe alg√∫n problema con tu c√≥digo o conclusiones.
# </div>
# 
# Puedes responderme de esta forma:
# <div class="alert alert-block alert-info">
# <b>Respuesta del estudiante</b> <a class=‚ÄútocSkip‚Äù></a>
# </div>

# Con el fin de combatir la cancelaci√≥n, Model Fitness ha digitalizado varios de sus perfiles de clientes. Tu tarea consiste en analizarlos y elaborar una estrategia de retenci√≥n de clientes.
# 
# Tienes que:
# 
# Aprender a predecir la probabilidad de p√©rdida (para el pr√≥ximo mes) para cada cliente.
# 
# Elaborar retratos de usuarios t√≠picos: selecciona los grupos m√°s destacados y describe sus caracter√≠sticas principales.
# 
# Analizar los factores que m√°s impactan la p√©rdida.
# 
# Sacar conclusiones b√°sicas y elaborar recomendaciones para mejorar la atenci√≥n al cliente:
# 
# identificar a los grupos objetivo;
# 
# sugerir medidas para reducir la rotaci√≥n;
# 
# describir cualquier otro patr√≥n que observes con respecto a la interacci√≥n con los clientes.

# <div class="alert alert-block alert-warning">
# <b>Comentario del revisor (1ra Iteracion)</b> <a class=‚ÄútocSkip‚Äù></a>
# 
# Buen trabajo incluyendo esta secci√≥n para explicar el proyecto, te recomendar√≠a que agregues una secci√≥n m√°s donde hagas un breve resumen de lo que trata el proyecto y su objetivo a parte de lo que ya se detall√≥
# </div>

# In[1]:


import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report
from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score
from sklearn.cluster import KMeans
from scipy.cluster.hierarchy import dendrogram, linkage
import scipy.cluster.hierarchy as sch


# <div class="alert alert-block alert-info">
# <b>Comentario del revisor (1ra Iteracion)</b> <a class=‚ÄútocSkip‚Äù></a>
# 
# Una buena pr√°ctica para cuando tengas que importar varias librer√≠as es seguir el siguiente √≥rden en las mismas:
# 
# - Primero todas las librer√≠as que vienen ya con python c√≥mo `datetime`, `os`, `json`, etc.
# - Luego de las librer√≠as de Python si las de terceros c√≥mo `pandas`, `scipy`, `numpy`, etc.
# - Por √∫ltimo, en el caso de que armes tu propio m√≥dulo en tu proyecto esto deber√≠a ir en tercer lugar, y recuerda siempre ordenar cada tipo por orden alfab√©tico
# </div>

# ## An√°lisis exploratorio de datos (EDA)

# In[2]:


# Cargar el dataset
df = pd.read_csv('/datasets/gym_churn_us.csv')

# Observaci√≥n de caracter√≠sticas ausentes
missing_values = df.isnull().sum()
print("Valores ausentes por caracter√≠stica:\n", missing_values)


# In[3]:


df.head()


# In[4]:


# Resumen estad√≠stico
df.describe()


# In[5]:


# Valores medios por grupo
grupo_0 = df[df['Churn'] == 0].mean()
grupo_1 = df[df['Churn'] == 1].mean()
display(grupo_0)
display(grupo_1)


# In[6]:


# Crear histogramas de barras y distribuciones por grupo
fig, axes = plt.subplots(len(df.columns)//3, 3, figsize=(15, 20))

# Ajustar en caso de que no sea divisible por 3
if len(df.columns) % 3 != 0:
    fig, axes = plt.subplots(len(df.columns)//3 + 1, 3, figsize=(15, 20))

for i, column in enumerate(df.columns):
    if column != 'cancelacion':
        sns.histplot(df[df['Churn'] == 1][column], kde=True, color='red', ax=axes[i//3, i%3], label='Cancelacion')
        sns.histplot(df[df['Churn'] == 0][column], kde=True, color='blue', ax=axes[i//3, i%3], label='No Cancelacion')
        axes[i//3, i%3].set_title(column)
        axes[i//3, i%3].legend()

plt.tight_layout()
plt.show()


# In[7]:


# Matriz de correlaci√≥n
correlation_matrix = df.corr()


# In[8]:


# Mostrar la matriz de correlaci√≥n
plt.figure(figsize=(12, 8))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm')
plt.title('Matriz de Correlaci√≥n')
plt.show()


# <div class="alert alert-block alert-success">
# <b>Comentario del revisor (1ra Iteracion)</b> <a class=‚ÄútocSkip‚Äù></a>
# 
# Correcto! la visualizaci√≥n es muy clara para poder comparar
# </div>

# ## Construir un modelo para predecir la cancelaci√≥n de usuarios

# In[9]:


# Definir las caracter√≠sticas (X) y el objetivo (y)
X = df.drop(columns='Churn') 
y = df['Churn']

# Dividir los datos en conjuntos de entrenamiento y validaci√≥n
X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.2, random_state=0)

# Mostrar el tama√±o de los conjuntos de entrenamiento y validaci√≥n
print("Tama√±o del conjunto de entrenamiento:", X_train.shape)
print("Tama√±o del conjunto de validaci√≥n:", X_val.shape)


# In[10]:


# Entrenar el modelo de regresi√≥n log√≠stica
log_reg = LogisticRegression()
log_reg.fit(X_train, y_train)


# In[11]:


# Predicciones del conjunto de validaci√≥n con regresi√≥n log√≠stica
y_pred_log_reg = log_reg.predict(X_val)

# Evaluar el modelo de regresi√≥n log√≠stica
log_reg_accuracy = accuracy_score(y_val, y_pred_log_reg)
log_reg_precision = precision_score(y_val, y_pred_log_reg)
log_reg_recall = recall_score(y_val, y_pred_log_reg)

print("Regresi√≥n Log√≠stica:")
print("Exactitud:", log_reg_accuracy)
print("Precisi√≥n:", log_reg_precision)
print("Recall:", log_reg_recall)


# In[12]:


# Entrenar el modelo de bosque aleatorio
rf = RandomForestClassifier(n_estimators=100, random_state=0)
rf.fit(X_train, y_train)

# Predicciones del conjunto de validaci√≥n con bosque aleatorio
y_pred_rf = rf.predict(X_val)

# Evaluar el modelo de bosque aleatorio
rf_accuracy = accuracy_score(y_val, y_pred_rf)
rf_precision = precision_score(y_val, y_pred_rf)
rf_recall = recall_score(y_val, y_pred_rf)

print("Bosque Aleatorio:")
print("Exactitud:", rf_accuracy)
print("Precisi√≥n:", rf_precision)
print("Recall:", rf_recall)


# In[13]:


# Comparaci√≥n de los modelos
print("\nComparaci√≥n de Modelos:")
print("Regresi√≥n Log√≠stica: Exactitud =", log_reg_accuracy, ", Precisi√≥n =", log_reg_precision, ", Recall =", log_reg_recall)
print("Bosque Aleatorio: Exactitud =", rf_accuracy, ", Precisi√≥n =", rf_precision, ", Recall =", rf_recall)


# El modelo de regresi√≥n log√≠stica tiene un mejor desempe√±o en todas las m√©tricas comparadas (exactitud, precisi√≥n y recall) con el bosque aleatorio. Por lo tanto, parece ser el mejor modelo para este conjunto de datos espec√≠fico.

# ## Crear cl√∫steres de usuarios/as

# In[14]:


# Dejar de lado la columna 'churn'
X = df.drop(columns='Churn')

# Estandarizar los datos
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Crear la matriz de distancias
linked = sch.linkage(X_scaled, method='ward')


# In[15]:


# Trazar el dendrograma
plt.figure(figsize=(10, 7))
dendrogram = sch.dendrogram(linked)
plt.title('Dendrograma')
plt.xlabel('Clientes')
plt.ylabel('Distancia Eucl√≠dea')
plt.show()


# In[16]:


# Entrenar el modelo K-means
kmeans = KMeans(n_clusters=5)
clusters = kmeans.fit_predict(X_scaled)

# A√±adir los cl√∫steres al dataframe original
df['cluster'] = clusters

# Valores medios de las caracter√≠sticas para cada cl√∫ster
cluster_means = df.groupby('cluster').mean()
print("Valores medios de las caracter√≠sticas para cada cl√∫ster:\n", cluster_means)



# In[17]:


# Trazar distribuciones de caracter√≠sticas para cada cl√∫ster
for column in X.columns:
    plt.figure(figsize=(10, 6))
    sns.histplot(data=df, x=column, hue='cluster', multiple='stack', palette='Set1')
    plt.title(f'Distribuci√≥n de {column} por Cl√∫ster')
    plt.show()


# 1. La distribuci√≥n de g√©neros es mimilar.
# 2. Existe una gran diferencia entre clientes que viven cerca comparado con los que viven lejos.
# 3. En cuanto a 'Partner'existen variaciones significativas entre cl√∫sters, tomando en cuenta los clientes que son partes de empresas asociadas y clientes que no.
# 4. Por otro lado, 'Promo_friends' presenta gran diferencia entre clientes que llegaron por la oferta y los que no.
# 5. La mayor√≠a de los cl√∫sters tienen clientes que contratan el servicio por menos de 2 meses y muchos del cl√∫ster 1 por 12 meses.
# 6. La edad de la mayor√≠a de los clientes por cl√∫ster se encuentra entre los 25 y 35 a√±os.
# 7. Los cargos adicionales sen encuentran entre 0 y 200, distribuy√©ndose de manera similar entre cl√∫sters.
# 8. El promedio de visitas por semana est√° entre 1 y 3 d√≠as, y se distribuye de forma similar entre cl√∫sters en ese rango.
# 9. Lo mismo pasa con la distribuci√≥n de visitas mensual, sin embargo, el promedio de d√≠as var√≠a entre 1 y 4 d√≠as.

# In[18]:


# Calcular la tasa de cancelaci√≥n para cada cl√∫ster
cancellation_rate = df.groupby('cluster')['Churn'].mean()*100
print("Tasa de cancelaci√≥n para cada cl√∫ster:\n", cancellation_rate)


# Cluster 0: Tasa de cancelaci√≥n del 26.6%
# 
# Cluster 1: Tasa de cancelaci√≥n del 2.7%
# 
# Cluster 2: Tasa de cancelaci√≥n del 52.1%
# 
# Cluster 3: Tasa de cancelaci√≥n del 44.1%
# 
# Cluster 4: Tasa de cancelaci√≥n del 7.2%
# 
# Identificaci√≥n de cl√∫steres propensos a irse y leales
# 
# M√°s propensos a irse: 
# 
# Cluster 2: 52.1%
# 
# Cluster 3: 44.1%
# 
# M√°s leales:
# 
# Cluster 1: 2.7%
# 
# Cluster 4: 7.2%
# 
# El Cluster 0 tiene una tasa de cancelaci√≥n intermedia del 26.6%.

# ## Conclusiones
# 
# Estrategias de Retenci√≥n para Cl√∫steres con Altas Tasas de Cancelaci√≥n:
# 
# 1. Realizar encuestas y entrevistas para identificar problemas espec√≠ficos que enfrentan los usuarios.
# 2. Implementar programas de fidelizaci√≥n personalizados, como descuentos exclusivos o servicios adicionales.
# 3. Mejorar las caracter√≠sticas de productos o servicios que est√°n insatisfaciendo a estos usuarios, bas√°ndose en el feedback recibido.
# 
# Implementaci√≥n de marketing:
# 
# Campa√±as de Retenci√≥n:
# 
# 1. Emails personalizados: Enviar correos electr√≥nicos con ofertas exclusivas y encuestas de satisfacci√≥n a los usuarios.
# 
# 2. Atenci√≥n al cliente: Ofrecer soporte adicional condtante, abordando problemas antes de que presenten mayores inconvenientes.
# 
# Campa√±as de Fidelizaci√≥n:
# 
# 1. Programa de recompensas: Crear un programa de recompensas basado en puntos para usuarios, donde puedan canjear puntos por productos o servicios.
# 
# 2. Eventos: Invitar a estos usuarios a eventos exclusivos, como lanzamientos de nuevos productos o sesiones de feedback.
# 
# Mejoras de Producto/Servicio:
# 
# 1. Actualizaciones basadas en feedback: Utilizar la retroalimentaci√≥n de usuarios leales para implementar nuevas mejoras que tambi√©n podr√≠an atraer y retener a usuarios de otros cl√∫steres.
# 
# 2. Pruebas A/B: Realizar pruebas A/B con diferentes mejoras en caracter√≠sticas espec√≠ficas para ver cu√°l tiene el mayor impacto en la satisfacci√≥n y retenci√≥n de usuarios.
# 
# 

# <div class="alert alert-block alert-info">
# <b>Comentario general (1ra Iteracion)</b> <a class=‚ÄútocSkip‚Äù></a>
# 
# Desarrollaste un proyecto muy bueno y lograste obtener los resultados esperados acorde a las instrucciones dadas, adem√°s tus recomendaciones al final son muy buenas y se nota la relaci√≥n que tienen con el proceso de an√°lisis y entrenamiento de los modelos que realizaste con anterioridad.
#     
# Veo que incluso incluiste en ciertos puntos tu interpretaci√≥n de las gr√°ficas mostradas, te recomiendo que apliques esto para el resto de gr√°ficas ya que algunos quedaron sin comentarios. El poner tu interpretaci√≥n agiliza el entender el proceso de an√°lisis cuando alguien m√°s en tu equipo quiera usar tu notebook.
#     
# Saludos!
# </div>
